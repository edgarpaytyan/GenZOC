name: Build

on:
  push:
    branches:
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          submodules: 'recursive'
      - uses: c-hive/gha-yarn-cache@v2
      - name: Install
        run: yarn install
      - name: Run stylelint
        if: ${{ github.event_name == 'pull_request'}}
        uses: reviewdog/action-stylelint@v1
      - name: Run Eslint
        if: ${{ github.event_name == 'pull_request'}}
        uses: reviewdog/action-eslint@v1
      - name: Run Prettier
        if: ${{ github.event_name == 'pull_request'}}
        run: yarn lintci-prettier
      - name: Lint
        if: ${{ github.event_name == 'push'}}
        run: yarn lintci
  bundle:
    # needs: lint
    runs-on: ${{ matrix.platform.host }}
    strategy:
      matrix:
        platform:
          - host: windows-latest
            target: win32
            arch: x64
          - host: windows-latest
            target: win32
            arch: arm64
          - host: macos-latest
            target: darwin
            arch: x64
          - host: macos-latest
            target: darwin
            arch: arm64
          - host: macos-latest
            arch: x64
            target: mas
          - host: macos-latest
            arch: arm64
            target: mas
          - host: ubuntu-latest
            target: linux
            arch: x64
          - host: ubuntu-latest
            target: linux
            arch: arm64
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: c-hive/gha-yarn-cache@v2
      - name: Bundle app
        uses: electron-forge/bundle-action@main
        with:
          target-arch: ${{ matrix.platform.arch }}
          target-platform: ${{ matrix.platform.target }}
      # Archives the bundled app before uploading, to preserve permissions and symlinks.
      # See: https://github.com/actions/upload-artifact#limitations
      - name: Archive bundled app
        run: tar cvf bundled-app-${{ matrix.platform.target }}-${{ matrix.platform.arch }}.tar out
      - name: Save bundled app
        uses: actions/upload-artifact@v2
        with:
          name: bundled-app-${{ matrix.platform.target }}-${{ matrix.platform.arch }}
          path: bundled-app-${{ matrix.platform.target }}-${{ matrix.platform.arch }}.tar
  installers:
    needs: bundle
    runs-on: ${{ matrix.distributable.os }}
    strategy:
      matrix:
        distributable:
          - os: windows-latest
            platform: win32
            arch: x64
            maker: squirrel
          - os: windows-latest
            platform: win32
            arch: arm64
            maker: squirrel
          - os: windows-latest
            platform: win32
            arch: x64
            maker: zip
          - os: windows-latest
            platform: win32
            arch: arm64
            maker: zip
          - os: macos-latest
            platform: darwin
            arch: x64
            maker: dmg
          - os: macos-latest
            platform: darwin
            arch: arm64
            maker: dmg
          - os: macos-latest
            platform: darwin
            arch: x64
            maker: zip
          - os: macos-latest
            platform: darwin
            arch: arm64
            maker: zip
          - os: macos-latest
            platform: mas
            arch: x64
            maker: dmg
          - os: macos-latest
            platform: mas
            arch: arm64
            maker: dmg
          - os: macos-latest
            platform: mas
            arch: x64
            maker: zip
          - os: macos-latest
            platform: mas
            arch: arm64
            maker: zip
          - os: ubuntu-latest
            platform: linux
            arch: x64
            maker: zip
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            maker: zip
          - os: ubuntu-latest
            platform: linux
            arch: x64
            maker: deb
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            maker: deb
        #   - os: ubuntu-latest
        #     platform: linux
        #     arch: x64
        #     maker: flatpak
          - os: ubuntu-latest
            platform: linux
            arch: x64
            maker: rpm
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            maker: rpm
          - os: ubuntu-18.04
            platform: linux
            arch: x64
            maker: snap
    steps:
      - uses: actions/checkout@v2
      - name: Download bundled app artifact
        uses: actions/download-artifact@v2
        with:
          name: bundled-app-${{ matrix.distributable.platform }}-${{ matrix.distributable.arch }}
      - name: Unarchive bundled app
        shell: bash
        run: tar xvf bundled-app-${{ matrix.distributable.platform }}-${{ matrix.distributable.arch }}/bundled-app-${{ matrix.distributable.platform }}-${{ matrix.distributable.arch }}.tar
      - name: Setup Platform dependencies
        run: ci/platform_setup.sh
        env:
          MAKER: ${{ matrix.distributable.maker }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Snapcraft
        if: ${{ matrix.distributable.maker == 'snap'}}
        uses: samuelmeuli/action-snapcraft@v1
      - uses: c-hive/gha-yarn-cache@v2
      - name: Generate distributables
        uses: electron-forge/distributable-action@main
        with:
          target-maker: "@electron-forge/maker-${{ matrix.distributable.maker }}"
          target-arch: ${{ matrix.distributable.arch }}
          target-platform: ${{ matrix.distributable.platform }}
        env:
          DEBUG: "electron-installer-snap:snapcraft"
      - name: Save distributable
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.distributable.maker }} (${{ matrix.distributable.platform }} ${{ matrix.distributable.arch }})
          path: out/make